<%
case
when vm_state == :create
%>
glite-lb-job_reg -m scientific.civ.zcu.cz:9400 -s application -v | tail -n 2 | grep EDG_JOBID | awk -F = '{print $2}' | tr -d '"'
<%
when ((vm_state == :prolog) and (not edg_jobid.empty?))
%>
glite-lb-logevent --source Application --jobid <%= edg_jobid %> --sequence <%= edg_wl_sequence %> --event VMCreate --image "<%= vm_template.IMAGES.first %>" --require "<%= vm_template.REQ_VCPU %> CPU, <%= vm_template.REQ_MEMORY %> MB RAM" --id <%= vm_template.ID %> --name "<%= vm_template.NAME %>" --owner "<%= user_identity %>" --hostname "<%= vm_hostname %>"
glite-lb-logevent --source Application --jobid <%= edg_jobid %> --sequence <%= edg_wl_sequence %> --event VMHost --hostname "<%= vm_template.HOSTS.last %>"
<%
when ((vm_state == :running) and (not edg_jobid.empty?))
%>
glite-lb-logevent --source Application --jobid <%= edg_jobid %> --sequence <%= edg_wl_sequence %> --event VMRunning
<%
when ((vm_state == :shutdown) and (not edg_jobid.empty?))
%>
glite-lb-logevent --source Application --jobid <%= edg_jobid %> --sequence <%= edg_wl_sequence %> --event VMShutdown
<%
when ((vm_state == :stop) and (not edg_jobid.empty?))
%>
glite-lb-logevent --source Application --jobid <%= edg_jobid %> --sequence <%= edg_wl_sequence %> --event VMStop
<%
when ((vm_state == :done) and (not edg_jobid.empty?))
%>
glite-lb-logevent --source Application --jobid <%= edg_jobid %> --sequence <%= edg_wl_sequence %> --event VMDone --status_code OK --usage "TODO"
<%
when ((vm_state == :failed) and (not edg_jobid.empty?))
%>
glite-lb-logevent --source Application --jobid <%= edg_jobid %> --sequence <%= edg_wl_sequence %> --event VMDone --status_code FAILURE --usage "TODO"
<%
else
%>
/bin/false
<%
end
%>
